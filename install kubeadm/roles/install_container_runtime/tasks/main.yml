---
# Cài module overlay, br_netfilter cho các hosts
# Bật chế độ chuyển tiếp gói tin ip
- name: Load required kernel modules for Ubuntu hosts
  ansible.builtin.copy:
    src: k8s_module.conf
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: '0644'
  notify: Load Kernel Modules

- name: Apply sysctl settings
  ansible.builtin.copy:
    src: k8s_systemd.conf
    dest: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: '0644'
  notify: Apply Sysctl Settings

# Triển khai container runtime-containerd theo option 1, https://github.com/containerd/containerd/blob/main/docs/getting-started.md
# Mục tiêu cài đặt runc (runtime container) và CNI plugin (các option khác phải cài bằng tay)
- name: Check if containerd archive exists
  ansible.builtin.stat:
    path: "{{ containerd_download_dir }}/containerd-{{ containerd_version }}-{{ containerd_os }}-{{ containerd_arch }}.tar.gz"
  register: containerd_archive_stat

- name: Download containerd
  ansible.builtin.get_url:
    url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-{{ containerd_os }}-{{ containerd_arch }}.tar.gz"
    dest: "{{ containerd_download_dir }}/containerd-{{ containerd_version }}-{{ containerd_os }}-{{ containerd_arch }}.tar.gz"
    checksum: "{{ containerd_checksum }}"
  when: not containerd_archive_stat.stat.exists

- name: Extract "containerd-{{ containerd_version }}-{{ containerd_os }}-{{ containerd_arch }}.tar.gz" to /usr/local
  ansible.builtin.unarchive:
    src: "{{ containerd_download_dir }}/containerd-{{ containerd_version }}-{{ containerd_os }}-{{ containerd_arch }}.tar.gz"
    dest: "{{ containerd_download_dir }}"
    # khi chạy playbook thứ 2 nó sẽ thực hiện lại thao tác giải nén, càn chỉ định nó nếu tệp đã tồn tại thì không cần giải nén nữa
    creates: "{{ containerd_dir }}/bin/containerd"

- name: Check if containerd.service file exists
  ansible.builtin.stat:
    path: "/usr/local/lib/systemd/system/containerd.service"
  register: containerd_service_stat

- name: Download containerd.service file to start systemd cgroup driver
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
    dest: "/usr/local/lib/systemd/system/containerd.service"
    mode: '0755'
  when: not containerd_service_stat.stat.exists
  notify: Reload systemd daemon

- name: Ensure containerd service started
  ansible.builtin.systemd:
    name: containerd
    state: started
    enabled: true
  notify: Enabled and start containerd

# Install runc
- name: Check if runc file exists
  ansible.builtin.stat:
    path: "{{ runc_download_dir }}/run.c.{{ containerd_arch }}"
  register: runc_file_stat

- name: Download runc
  ansible.builtin.get_url:
    url: "https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.{{ runc_arch }}"
    dest: "{{ runc_download_dir }}/run.c.{{ containerd_arch }}"  
    checksum: "{{ runc_checksum }}"
  when: not runc_file_stat.stat.exists

- name: Install runc
  ansible.builtin.shell: install -m 755 "{{ runc_download_dir }}" /usr/local/sbin/runc

# Installing CNI plugins
- name: Check if CNI plugin file exists
  ansible.builtin.stat:
    path: "{{ cni_download_dir }}/cni-plugins-{{ cni_os }}-{{ cni_arch }}-v{{ cni_version }}.tgz"
  register: cni_file_stat

- name: Download CNI plugin
  ansible.builtin.get_url:
    url: "https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-{{ cni_os }}-{{ cni_arch }}-v{{ cni_version }}.tgz" 
    dest: "{{ cni_download_dir }}/cni-plugins-{{ cni_os }}-{{ cni_arch }}-v{{ cni_version }}.tgz"
    checksum: "{{ cni_checksum }}"
  when: not cni_file_stat.stat.exists

- name: Extract "cni-plugins-{{ cni_os }}-{{ cni_arch }}-v{{ cni_version }}.tgz" to /opt/cni/bin
  ansible.builtin.unarchive:
    src: "{{ cni_download_dir }}/cni-plugins-{{ cni_os }}-{{ cni_arch }}-v{{ cni_version }}.tgz"
    dest: "{{ cni_download_dir }}"
    # khi chạy playbook thứ 2 nó sẽ thực hiện lại thao tác giải nén, càn chỉ định nó nếu tệp đã tồn tại thì không cần giải nén nữa
    creates: "{{ cni_dir }}/bin/vrf"